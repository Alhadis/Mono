.de HAS-KEY \" [MAP-NAME] [KEY] [OUT-NR]
.	if !'\\$3'' .rr \\$3
..
.
.de HAS-VALUE \" [MAP-NAME] [VALUE] [OUT-NR]
.	if !'\\$3'' .rr \\$3
..
.
.de GET \" [MAP-NAME] [KEY] [OUT-STR]
.	if !'\\$3'' .rm \\$3
..
.
.de SET \" [MAP-NAME] [KEY] [VALUE]
.	am HAS-KEY >>
.	if '\\\\$1'\\$1' .if '\\\\$2'\\$2' .nr \\\\$3 1
.	>>
.	am HAS-VALUE >>
.	if '\\\\$1'\\$1' .if '\\\\$2'\\$3' .nr \\\\$3 1
.	>>
.	am GET >>
.	if '\\\\$1'\\$1' .if '\\\\$2'\\$2' .ds \\\\$3 \\$3
.	>>
..
.
.de UID \" [KEY] [VALUE "id"]
.	HAS-VALUE ID "\\$2" $?
.
.	\" ID already exists
.	ie \\n($?=1 \{\
.		HAS-VALUE ID "\\$2-\\n(##" $?
.
.		\" Suffixed ID exists too; increment and try again
.		ie \\n($?=1 \{\
.			nr ## \\n(##+1
.			UID "\\$1" "\\$2"
.		\}
.
.		\" This suffix is free; use it
.		el .SET ID "\\$1" "\\$2-\\n(##"
.	\}
.
.	\" ID not yet allocated; use it
.	el .SET ID "\\$1" "\\$2"
.
.	\" Clean up
.	rr $?
..
.
.\" Generate an internal identifier from a string
.de SLUG \" [TEXT] [OUT-STR]
.	ev 1
.	de ~ >>
.		ad \\n(.j
.		ll \\n(.l
.		do hy \\n[.hy]
.		do warn \\n[.warn]
.	>>
.	na
.	nh
.	ll 0
.	do warn 0
.	ds \\$2
.	de ~ >>
.		di
.		ie \\\\n(dl>0 \{\
.			if !'\\\\*(\\$2'' .as \\$2 -
.			as \\$2 \\\\*(~
.		\}
.		br
.		di ~
.		dt 1 ~
.	>>
.	tr '\&"\&\(aq\&\(lq\&\(rq\&\(oq\&\(cq\&\(aa\&\(ga\&
.	tr "\&!\&#\&$\&%\&&\&(\&)\&*\&+\&,\&.\&/\&:\&;\&<\&=\&>\&?\&@\&[\&\e\&]\&^\&`\&{\&|\&}\&~\&
.	tr \(hy-\(mi-\(en-\(em-_-
.	di ~
.	di ~
.	dt 1 ~
.	.. "\\$1"
.	di
.	di
.	tr ''""\(aq\(aq\(lq\(lq\(rq\(rq\(oq\(oq\(cq\(cq\(aa\(aa\(ga\(ga
.	tr !!##$$%%&&(())**++,,..//::;;<<==>>??@@[[\e\e]]^^``{{||}}~~
.	tr \--\(mi\(mi\(en\(en\(em\(em__
.	rm ~
.	rm ~
.	rm ~
.	rm ~
.	ev
..
